// <auto-generated />
using System;
using LogicaAccesoDatos.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250429000040_ModificacionPesoADecimalEnvio")]
    partial class ModificacionPesoADecimalEnvio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Agencias", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Envio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Envios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EnvioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EnvioId");

                    b.ToTable("Seguimientos", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.EnvioComun", b =>
                {
                    b.HasBaseType("LogicaNegocio.EntidadesDominio.Envio");

                    b.Property<int>("AgenciaId")
                        .HasColumnType("int");

                    b.HasIndex("AgenciaId");

                    b.ToTable("EnviosComunes", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.EnvioUrgente", b =>
                {
                    b.HasBaseType("LogicaNegocio.EntidadesDominio.Envio");

                    b.Property<bool>("EntregaEficiente")
                        .HasColumnType("bit");

                    b.ToTable("EnviosUrgentes", (string)null);
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Agencia", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionPostalAgencia", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("DireccionPostal")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DireccionPostal");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.LatitudAgencia", "Latitud", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitud")
                                .HasColumnType("float")
                                .HasColumnName("Latitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.LongitudAgencia", "Longitud", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float")
                                .HasColumnName("Longitud");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.NombreAgencia", "Nombre", b1 =>
                        {
                            b1.Property<int>("AgenciaId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("AgenciaId");

                            b1.ToTable("Agencias");

                            b1.WithOwner()
                                .HasForeignKey("AgenciaId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();

                    b.Navigation("Latitud")
                        .IsRequired();

                    b.Navigation("Longitud")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Auditoria", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.AccionAuditoria", "Accion", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<string>("Accion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Accion");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DetalleAuditoria", "Detalle", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<string>("Detalle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Detalle");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaAuditoria", "Fecha", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Fecha")
                                .HasColumnType("datetime2")
                                .HasColumnName("Fecha");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.Navigation("Accion")
                        .IsRequired();

                    b.Navigation("Detalle")
                        .IsRequired();

                    b.Navigation("Fecha")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Envio", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.EntidadesDominio.Usuario", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaEntregaEnvio", "FechaEntrega", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaEntrega")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaEntrega");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaSalidaEnvio", "FechaSalida", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaSalida")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaSalida");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.NumeroTrackingEnvio", "NumeroTracking", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<string>("NumeroTracking")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NumeroTracking");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.PesoEnvio", "Peso", b1 =>
                        {
                            b1.Property<int>("EnvioId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Peso")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Peso");

                            b1.HasKey("EnvioId");

                            b1.ToTable("Envios");

                            b1.WithOwner()
                                .HasForeignKey("EnvioId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("FechaEntrega");

                    b.Navigation("FechaSalida")
                        .IsRequired();

                    b.Navigation("NumeroTracking")
                        .IsRequired();

                    b.Navigation("Peso")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Rol", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.NombreRol", "Nombre", b1 =>
                        {
                            b1.Property<int>("RolId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("RolId");

                            b1.ToTable("Roles");

                            b1.WithOwner()
                                .HasForeignKey("RolId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Seguimiento", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Usuario", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.EntidadesDominio.Envio", "Envio")
                        .WithMany("Seguimientos")
                        .HasForeignKey("EnvioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.ComentarioSeguimiento", "Comentario", b1 =>
                        {
                            b1.Property<int>("SeguimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Comentario")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Comentario");

                            b1.HasKey("SeguimientoId");

                            b1.ToTable("Seguimientos");

                            b1.WithOwner()
                                .HasForeignKey("SeguimientoId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaSeguimiento", "Fecha", b1 =>
                        {
                            b1.Property<int>("SeguimientoId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Fecha")
                                .HasColumnType("datetime2")
                                .HasColumnName("Fecha");

                            b1.HasKey("SeguimientoId");

                            b1.ToTable("Seguimientos");

                            b1.WithOwner()
                                .HasForeignKey("SeguimientoId");
                        });

                    b.Navigation("Comentario")
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Envio");

                    b.Navigation("Fecha")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Usuario", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.ContrasenaUsuario", "Password", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Contrasena")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Password");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionUsuario", "Direccion", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Direccion");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DocumentoIdentidadUsuario", "DocumentoIdentidad", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<int>("DocumentoIdentidad")
                                .HasColumnType("int")
                                .HasColumnName("DocumentoIdentidad");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.EmailUsuario", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaNacimientoUsuario", "FechaNacimiento", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaNacimiento")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaNacimiento");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaRegistroUsuario", "FechaRegistro", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaRegistro")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaRegistro");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.NombreUsuario", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.TelefonoUsuario", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Telefono")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("DocumentoIdentidad")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FechaNacimiento")
                        .IsRequired();

                    b.Navigation("FechaRegistro")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Telefono")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.EnvioComun", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Agencia", "Agencia")
                        .WithMany()
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.EntidadesDominio.Envio", null)
                        .WithOne()
                        .HasForeignKey("LogicaNegocio.EntidadesDominio.EnvioComun", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.EnvioUrgente", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Envio", null)
                        .WithOne()
                        .HasForeignKey("LogicaNegocio.EntidadesDominio.EnvioUrgente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionPostalEnvioUrgente", "DireccionPostal", b1 =>
                        {
                            b1.Property<int>("EnvioUrgenteId")
                                .HasColumnType("int");

                            b1.Property<string>("DireccionPostal")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DireccionPostal");

                            b1.HasKey("EnvioUrgenteId");

                            b1.ToTable("EnviosUrgentes");

                            b1.WithOwner()
                                .HasForeignKey("EnvioUrgenteId");
                        });

                    b.Navigation("DireccionPostal")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Envio", b =>
                {
                    b.Navigation("Seguimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
