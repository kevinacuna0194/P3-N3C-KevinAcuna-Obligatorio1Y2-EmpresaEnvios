// <auto-generated />
using System;
using LogicaAccesoDatos.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20250419000628_Detalle_Auditorias")]
    partial class Detalle_Auditorias
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Auditoria", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.AccionAuditoria", "Accion", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<string>("Accion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Accion");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DetalleAuditoria", "Detalle", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<string>("Detalle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Detalle");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaAuditoria", "Fecha", b1 =>
                        {
                            b1.Property<int>("AuditoriaId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Fecha")
                                .HasColumnType("datetime2")
                                .HasColumnName("Fecha");

                            b1.HasKey("AuditoriaId");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaId");
                        });

                    b.Navigation("Accion")
                        .IsRequired();

                    b.Navigation("Detalle")
                        .IsRequired();

                    b.Navigation("Fecha")
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Rol", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.NombreRol", "Nombre", b1 =>
                        {
                            b1.Property<int>("RolId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("RolId");

                            b1.ToTable("Roles");

                            b1.WithOwner()
                                .HasForeignKey("RolId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.EntidadesDominio.Usuario", b =>
                {
                    b.HasOne("LogicaNegocio.EntidadesDominio.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.ValueObjects.ContrasenaUsuario", "Password", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Contrasena")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Password");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DireccionUsuario", "Direccion", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Direccion");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.DocumentoIdentidadUsuario", "DocumentoIdentidad", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<int>("DocumentoIdentidad")
                                .HasColumnType("int")
                                .HasColumnName("DocumentoIdentidad");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.EmailUsuario", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaNacimientoUsuario", "FechaNacimiento", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaNacimiento")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaNacimiento");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.FechaRegistroUsuario", "FechaRegistro", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("FechaRegistro")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaRegistro");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.NombreUsuario", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogicaNegocio.ValueObjects.TelefonoUsuario", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Telefono")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Telefono");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Direccion")
                        .IsRequired();

                    b.Navigation("DocumentoIdentidad")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FechaNacimiento")
                        .IsRequired();

                    b.Navigation("FechaRegistro")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Telefono")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
