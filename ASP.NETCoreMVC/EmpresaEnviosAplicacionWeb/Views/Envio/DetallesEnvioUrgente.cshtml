@using DTOs
@using Enum
@model EnvioDTO

@{
    ViewData["Title"] = "Detalles Envio Urgente";

    @functions {
        string ObtenerClaseEstado(EstadoEnvio estado)
        {
            return estado switch
            {
                EstadoEnvio.EnProcesoEntrega => "bg-warning text-dark rounded px-2 py-1", // Amarillo
                EstadoEnvio.Finalizado => "bg-success text-dark rounded px-2 py-1", // Verde
                _ => "bg-secondary text-white rounded px-2 py-1" // Por defecto, Gris
            };
        }
    }
}

@if (Model is null)
{
    if (TempData["Error"] is not null)
    {
        <div class="alert alert-danger text-center text-uppercase fw-bold mt-5" role="alert">
            <i class="bi bi-exclamation-circle-fill me-1"></i>
            @TempData["Error"]
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center text-uppercase fw-bold mt-5" role="alert">
            <i class="bi bi-exclamation-circle-fill me-1"></i>
            No se encontraron registros
        </div>
    }
}
else
{
    <section class="seccion">
        <h1 class="text-center heading mb-5">Detalles Envio Urgente</h1>

        <div class="row d-flex justify-content-center">

            <div class="col-md-6">

                <div class="card shadow border">
                    <div class="card-header bg-danger text-white text-center">
                        <h4 class="card-title">
                            <i class="bi bi-box-seam"></i>
                            Información del Envío <strong>#@Model.NumeroTracking</strong>
                        </h4>
                        <p class="card-subtitle text-light">Este es un envío urgente. Revisa los detalles con prioridad.</p>
                    </div> <!-- card-header -->

                    <div class="card-body">
                        <ul class="list-group list-group-flush px-3">
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Id):</strong> @Html.DisplayFor(model => model.Id)
                            </li>
                            <li class="list-group-item">
                                <strong>Número Tracking:</strong> @Html.DisplayFor(model => model.NumeroTracking)
                            </li>
                            <li class="list-group-item">
                                <strong>Id Empleado:</strong> @Html.DisplayFor(model => model.EmpleadoId)
                            </li>
                            <li class="list-group-item">
                                <strong>Nombre Empleado:</strong> @Html.DisplayFor(model => model.NombreEmpleado)
                            </li>
                            <li class="list-group-item">
                                <strong>Id Cliente:</strong> @Html.DisplayFor(model => model.ClienteId)
                            </li>
                            <li class="list-group-item">
                                <strong>Nombre Cliente:</strong> @Html.DisplayFor(model => model.NombreCliente)
                            </li>
                            <li class="list-group-item">
                                <strong>Email Cliente:</strong> @Html.Raw(Model.EmailCliente)
                            </li>
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Peso):</strong> @Html.DisplayFor(model => model.Peso)
                            </li>
                            <li class="list-group-item">
                                <strong>Fecha de Salida:</strong> @(Model.FechaSalida.ToString("dd/MM/yyyy"))
                            </li>
                            <li class="list-group-item">
                                <strong>Fecha de Entrega:</strong> @(Model.FechaEntrega.HasValue ? Model.FechaEntrega.Value.ToString("dd/MM/yyyy") : "Sin asignar")
                            </li>
                            <li class="list-group-item">
                                <strong>@Html.DisplayNameFor(model => model.Estado):</strong>
                                <span class="@ObtenerClaseEstado(Model.Estado) fw-bold">
                                    @(Model.Estado == EstadoEnvio.EnProcesoEntrega ? "En Proceso" : Model.Estado)
                                </span>
                            </li>
                            <li class="list-group-item">
                                <strong>Dirección Postal:</strong> @Html.DisplayFor(model => model.DireccionPostal)
                            </li>
                            <li class="list-group-item">
                                <strong>Entrega Eficiente:</strong> @(Model.EntregaEficiente.HasValue && Model.EntregaEficiente.Value ? "Sí" : "No")
                            </li>
                            @if (Model.Seguimientos != null && Model.Seguimientos.Any())
                            {
                                <li class="list-group-item">
                                    <strong class="text-danger">
                                        <i class="bi bi-clock-history"></i> Historial de Seguimientos:
                                    </strong>
                                    <ul class="list-group mt-3">
                                        @foreach (var seguimiento in Model.Seguimientos.OrderByDescending(s => s.Fecha))
                                        {
                                            <li class="list-group-item bg-light border-start border-4 border-danger shadow-sm mb-2 rounded">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span class="text-danger fw-semibold">
                                                        <i class="bi bi-calendar-check me-1"></i>
                                                        @seguimiento.Fecha.ToString("dd/MM/yyyy HH:mm")
                                                    </span>
                                                </div>

                                                <p class="mb-1 text-dark">
                                                    <i class="bi bi-person-circle me-1 text-secondary"></i>
                                                    <strong>Empleado:</strong> @seguimiento.NombreEmpleado
                                                </p>

                                                <p class="mb-0 text-muted fst-italic">
                                                    <i class="bi bi-chat-left-quote me-1"></i> "@seguimiento.Comentario"
                                                </p>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    </div> <!-- card-body -->

                    <div class="card-footer text-center">
                        <a asp-action="Listado" class="btn btn-danger fw-bold px-4 py-2 rounded-pill shadow-sm">
                            <i class="bi bi-arrow-left"></i> Volver
                        </a>
                    </div> <!-- card-footer -->
                </div> <!-- card -->
            </div> <!-- col-md-6 -->
        </div> <!-- row -->
    </section> <!-- section -->
}