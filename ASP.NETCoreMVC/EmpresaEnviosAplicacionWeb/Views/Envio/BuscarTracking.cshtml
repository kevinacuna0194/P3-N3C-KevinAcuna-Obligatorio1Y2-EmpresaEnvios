@using DTOs
@using Enum
@using EmpresaEnviosAplicacionWeb.Models
@model BuscarTrackingVM

@{
    ViewData["Title"] = "Buscar Tracking";

    @functions {
        string ObtenerClaseEstado(EstadoEnvio estado)
        {
            return estado switch
            {
                EstadoEnvio.EnProcesoEntrega => "bg-warning text-dark rounded px-2 py-1", // Amarillo
                EstadoEnvio.Finalizado => "bg-success text-dark rounded px-2 py-1", // Blanco
                _ => "bg-secondary text-white rounded px-2 py-1" // Por defecto, Gris
            };
        }
    }

    var rol = Context.Session.GetString("Rol");
    var token = Context.Session.GetString("Token");
    bool usuarioLogueado = !string.IsNullOrEmpty(token);
}

@if (Model is null)
{
    if (TempData["Error"] is not null)
    {
        <div class="alert alert-danger text-center text-uppercase fw-bold mt-5" role="alert">
            <i class="bi bi-exclamation-circle-fill me-1"></i>
            @TempData["Error"]
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center text-uppercase fw-bold mt-5" role="alert">
            <i class="bi bi-exclamation-circle-fill me-1"></i>
            No se encontraron registros
        </div>
    }
}
else
{
    <section class="@(Model.BusquedaEjecutada ? "seccion" : "seccion seccion-expandida")">

        <h1 class="text-center heading mb-5">Buscar Envío</h1>

        <div class="row d-flex justify-content-center">

            <div class="col-md-6">

                @* Alertas *@
                @if (TempData["Error"] is not null)
                {
                    <div class="alert alert-danger text-center text-uppercase fw-bold mb-4" role="alert">
                        <i class="bi bi-exclamation-circle-fill me-1"></i>
                        @TempData["Error"]
                    </div>
                }

                <form asp-action="BuscarTracking" class="mb-3">
                    <fieldset>
                        <legend class="fw-bold text-primary">
                            <i class="bi bi-search"></i> Buscar envío por tracking
                        </legend>
                        <p class="text-muted">Ingresa el número de tracking para encontrar detalles del envío.</p>

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group mb-3">
                            <label asp-for="EnvioDTO.NumeroTracking" class="control-label">Número de Tracking</label>
                            <input asp-for="EnvioDTO.NumeroTracking" class="form-control" required />
                            <span asp-validation-for="EnvioDTO.NumeroTracking" class="text-danger"></span>
                        </div>

                    </fieldset>
                    <div class="form-group d-flex justify-content-between align-items-end py-3 gap-3">
                        <button type="submit" class="btn btn-primary fw-bold px-4 py-2 rounded-pill shadow-sm">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                        @if (usuarioLogueado && rol == "Administrador")
                        {
                            <a asp-action="Listado" asp-controller="Envio" class="btn btn-outline-secondary fw-bold px-4 py-2 rounded-pill shadow-sm">
                                <i class="bi bi-arrow-left-circle-fill"></i> Volver
                            </a>
                        }
                        else if (usuarioLogueado && rol == "Cliente")
                        {
                            <a asp-action="ListadoCliente" asp-controller="Envio" class="btn btn-outline-secondary fw-bold px-4 py-2 rounded-pill shadow-sm">
                                <i class="bi bi-arrow-left-circle-fill"></i> Volver
                            </a>
                        }
                    </div>
                </form>
            </div> <!-- col-md-6 -->
        </div> <!-- row -->
    </section> <!-- section -->
    @if (Model.BusquedaEjecutada && Model.TipoEnvio == TipoEnvio.Comun)
    {
        <section class="my-5">

            <h2 class="text-center heading mb-5">Detalles Envío Común</h2>

            <div class="row d-flex justify-content-center">

                <div class="col-md-6">

                    <div class="card shadow border">
                        <div class="card-header bg-primary text-white text-center">
                            <h4 class="card-title">
                                <i class="bi bi-box-seam"></i>
                                Información del Envío <strong>#@Model.EnvioDTO.NumeroTracking</strong>
                            </h4>
                            <p class="card-subtitle text-light">Aquí puedes ver los detalles del envío seleccionado.</p>
                        </div> <!-- card-header -->

                        <div class="card-body">
                            <ul class="list-group list-group-flush px-3">
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Id):</strong> @Html.DisplayFor(model => Model.EnvioDTO.Id)
                                </li>
                                <li class="list-group-item">
                                    <strong>Número Tracking:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NumeroTracking)
                                </li>
                                <li class="list-group-item">
                                    <strong>Id Empleado:</strong> @Html.DisplayFor(model => Model.EnvioDTO.EmpleadoId)
                                </li>
                                <li class="list-group-item">
                                    <strong>Nombre Empleado:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NombreEmpleado)
                                </li>
                                <li class="list-group-item">
                                    <strong>Id Cliente:</strong> @Html.DisplayFor(model => Model.EnvioDTO.ClienteId)
                                </li>
                                <li class="list-group-item">
                                    <strong>Nombre Cliente:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NombreCliente)
                                </li>
                                <li class="list-group-item">
                                    <strong>Email Cliente:</strong> @Html.Raw(Model.EnvioDTO.EmailCliente)
                                </li>
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Peso):</strong> @Html.DisplayFor(model => Model.EnvioDTO.Peso)
                                </li>
                                <li class="list-group-item">
                                    <strong>Fecha de Salida:</strong> @(Model.EnvioDTO.FechaSalida.ToString("dd/MM/yyyy"))
                                </li>
                                <li class="list-group-item">
                                    <strong>Fecha de Entrega:</strong> @(Model.EnvioDTO.FechaEntrega.HasValue ? Model.EnvioDTO.FechaEntrega.Value.ToString("dd/MM/yyyy") : "Sin asignar")
                                </li>
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Estado):</strong>
                                    <span class="@ObtenerClaseEstado(Model.EnvioDTO.Estado) fw-bold">
                                        @(Model.EnvioDTO.Estado == EstadoEnvio.EnProcesoEntrega ? "En Proceso" : Model.EnvioDTO.Estado)
                                    </span>
                                </li>
                                <li class="list-group-item">
                                    <strong>Id Agencia:</strong> @Html.DisplayFor(model => Model.EnvioDTO.AgenciaId)
                                </li>
                                <li class="list-group-item">
                                    <strong>Nombre Agencia:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NombreAgencia)
                                </li>
                                @if (Model.EnvioDTO.Seguimientos != null && Model.EnvioDTO.Seguimientos.Any())
                            {
                                <li class="list-group-item">
                                    <strong class="text-primary">
                                        <i class="bi bi-clock-history"></i> Historial de Seguimientos:
                                    </strong>
                                    <ul class="list-group mt-3">
                                        @foreach (var seguimiento in Model.EnvioDTO.Seguimientos.OrderByDescending(s => s.Fecha))
                                        {
                                            <li class="list-group-item bg-light border-start border-4 border-primary shadow-sm mb-2 rounded">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span class="text-primary fw-semibold">
                                                        <i class="bi bi-calendar-check me-1"></i>
                                                        @seguimiento.Fecha.ToString("dd/MM/yyyy HH:mm")
                                                    </span>
                                                </div>

                                                <p class="mb-1 text-dark">
                                                    <i class="bi bi-person-circle me-1 text-secondary"></i>
                                                    <strong>Empleado:</strong> @seguimiento.NombreEmpleado
                                                </p>

                                                <p class="mb-0 text-muted fst-italic">
                                                    <i class="bi bi-chat-left-quote me-1"></i> "@seguimiento.Comentario"
                                                </p>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            </ul>
                        </div> <!-- card-body -->
                    </div> <!-- card -->
                </div> <!-- col-md-6 -->
            </div> <!-- row -->
        </section> <!-- section -->
    }
    else if (Model.BusquedaEjecutada && Model.TipoEnvio == TipoEnvio.Urgente)
    {
        <section class="my-5">
            <h2 class="text-center heading mb-5">Detalles Envio Urgente</h2>

            <div class="row d-flex justify-content-center">

                <div class="col-md-6">

                    <div class="card shadow border">
                        <div class="card-header bg-danger text-white text-center">
                            <h4 class="card-title">
                                <i class="bi bi-box-seam"></i>
                                Información del Envío <strong>#@Model.EnvioDTO.NumeroTracking</strong>
                            </h4>
                            <p class="card-subtitle text-light">Aquí puedes ver los detalles del envío seleccionado.</p>
                        </div> <!-- card-header -->


                        <div class="card-body">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Id):</strong> @Html.DisplayFor(model => Model.EnvioDTO.Id)
                                </li>
                                <li class="list-group-item">
                                    <strong>Número Tracking:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NumeroTracking)
                                </li>
                                <li class="list-group-item">
                                    <strong>Id Empleado:</strong> @Html.DisplayFor(model => Model.EnvioDTO.EmpleadoId)
                                </li>
                                <li class="list-group-item">
                                    <strong>Nombre Empleado:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NombreEmpleado)
                                </li>
                                <li class="list-group-item">
                                    <strong>Id Cliente:</strong> @Html.DisplayFor(model => Model.EnvioDTO.ClienteId)
                                </li>
                                <li class="list-group-item">
                                    <strong>Nombre Cliente:</strong> @Html.DisplayFor(model => Model.EnvioDTO.NombreCliente)
                                </li>
                                <li class="list-group-item">
                                    <strong>Email Cliente:</strong> @Html.Raw(Model.EnvioDTO.EmailCliente)
                                </li>
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Peso):</strong> @Html.DisplayFor(model => Model.EnvioDTO.Peso)
                                </li>
                                <li class="list-group-item">
                                    <strong>Fecha de Salida:</strong> @(Model.EnvioDTO.FechaSalida.ToString("dd/MM/yyyy"))
                                </li>
                                <li class="list-group-item">
                                    <strong>Fecha de Entrega:</strong> @(Model.EnvioDTO.FechaEntrega.HasValue ? Model.EnvioDTO.FechaEntrega.Value.ToString("dd/MM/yyyy") : "Sin asignar")
                                </li>
                                <li class="list-group-item">
                                    <strong>@Html.DisplayNameFor(model => Model.EnvioDTO.Estado):</strong>
                                    <span class="@ObtenerClaseEstado(Model.EnvioDTO.Estado)">@(Model.EnvioDTO.Estado == EstadoEnvio.EnProcesoEntrega ? "En Proceso" : Model.EnvioDTO.Estado)</span>
                                </li>
                                <li class="list-group-item">
                                    <strong>Dirección Postal:</strong> @Html.DisplayFor(model => Model.EnvioDTO.DireccionPostal)
                                </li>
                                <li class="list-group-item">
                                    <strong>Entrega Eficiente:</strong> @(Model.EnvioDTO.EntregaEficiente.HasValue && Model.EnvioDTO.EntregaEficiente.Value ? "Sí" : "No")
                                </li>
                                @if (Model.EnvioDTO.Seguimientos != null && Model.EnvioDTO.Seguimientos.Any())
                            {
                                <li class="list-group-item">
                                    <strong class="text-danger">
                                        <i class="bi bi-clock-history"></i> Historial de Seguimientos:
                                    </strong>
                                    <ul class="list-group mt-3">
                                        @foreach (var seguimiento in Model.EnvioDTO.Seguimientos.OrderByDescending(s => s.Fecha))
                                        {
                                            <li class="list-group-item bg-light border-start border-4 border-danger shadow-sm mb-2 rounded">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span class="text-danger fw-semibold">
                                                        <i class="bi bi-calendar-check me-1"></i>
                                                        @seguimiento.Fecha.ToString("dd/MM/yyyy HH:mm")
                                                    </span>
                                                </div>

                                                <p class="mb-1 text-dark">
                                                    <i class="bi bi-person-circle me-1 text-secondary"></i>
                                                    <strong>Empleado:</strong> @seguimiento.NombreEmpleado
                                                </p>

                                                <p class="mb-0 text-muted fst-italic">
                                                    <i class="bi bi-chat-left-quote me-1"></i> "@seguimiento.Comentario"
                                                </p>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                            </ul>
                        </div> <!-- card-body -->
                    </div> <!-- card -->
                </div> <!-- col-md-6 -->
            </div> <!-- row -->
        </section> <!-- section -->
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
